% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_reduced_count_models.R
\name{fit_red_Nmix_closed}
\alias{fit_red_Nmix_closed}
\title{Find maximum likelihood estimates for model parameters log(lambda) and logit(pdet). Uses optim.}
\usage{
fit_red_Nmix_closed(nit, lambda_site_covariates = NULL,
  pdet_site_covariates = NULL, red, K, starts = c(1, 0),
  VERBOSE = FALSE, PARALLELIZE = FALSE, method = "BFGS", ...)
}
\arguments{
\item{nit}{R by T matrix of full counts with R sites/rows and T sampling occassions/columns.}

\item{lambda_site_covariates}{Either NULL (no lambda site covariates) or a list of vectors of length R, where each vector represents one site covariate, and where the vector entries correspond to covariate values for each site. Note that the covariate structure is assumed to be log(lambda_it) = B0 + B1 &ast; V1_i + B2 &ast; V2_i + ...}

\item{pdet_site_covariates}{Either NULL (no pdet site covariates) or a list of vectors of length R, where each vector represents one site covariate, and where the vector entries correspond to covariate values for each site. Note that the covariate structure is assumed to be logit(lambda_it) = B0 + B1 &ast; V1_i + B2 &ast; V2_i + ...}

\item{red}{reduction factor, either a number, or a vector of reduction factors (R sites reductions).}

\item{K}{Upper bound on summations, either a single number, or a vector of K values, one for each site (full count value, eg if K=300 for full counts, K=reduction(300,red) for reduced counts).}

\item{starts}{Vector of starting values for optimize. Has two elements, log(lambda) and logit(pdet).}

\item{VERBOSE}{If true, prints the log likelihood to console at each optim iteration.}

\item{...}{Additional input for optim.}
}
\description{
Find maximum likelihood estimates for model parameters log(lambda) and logit(pdet). Uses optim.
}
\examples{
START_PARALLEL(num_cores=4)
Y    <- gen_Nmix_closed(8,8,250,0.5)
out  <- fit_red_Nmix_closed(Y$nit, red=10, K=300, starts = c(log(250),boot::logit(0.5)), PARALLELIZE=TRUE)
out2 <- fit_red_Nmix_closed(Y$nit, red=c(10,10,10,10,20,20,40,40), K=300, starts = c(log(250),boot::logit(0.5)), PARALLELIZE=TRUE)
END_PARALLEL()
}
